<?xml version="1.0"?>
<launch>

  <arg name="sim"			default="false"/>
  <arg name="scene"			default="aist_base_scene"/>
  <arg name="paused"			default="true"/>
  <arg name="gui"			default="true"/>
  <arg name="debug"			default="false"/>
  <arg name="joint_state_frequency"	default="50"/>
  <arg name="robot_state_frequency"	default="50"/>
  <arg name="rviz_config"		default=""/>

  <arg name="prefixes"		value="a_bot_ b_bot_"/>
  <arg name="devices"		value="ur5 ur5"/>
  <arg name="controllers"	value="a_bot_controller b_bot_controller"/>
  <arg name="drivers"		value="ur ur"/>
  <arg name="driver_args"	value="10.66.171.52, 50003;
				       10.66.171.51, 50002"/>

  <!-- Load URDF to param "robot_description" and spawn the robot -->
  <param name="robot_description"
  	 command="$(find xacro)/xacro --inorder
  		  '$(find aist_description
		  )/scenes/urdf/$(arg scene).urdf.xacro'"/>

  <group if="$(arg sim)">
    <!-- Startup simulated world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name"	value="worlds/empty.world"/>
      <arg name="paused"	value="$(arg paused)"/>
      <arg name="gui"		value="$(arg gui)"/>
      <arg name="verbose"	value="true"/>
    </include>

    <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model"
          args="-urdf -param robot_description -model robot
		-J a_bot_shoulder_pan_joint 1.5708
		-J a_bot_shoulder_lift_joint -2.1
		-J a_bot_elbow_joint 1.4
		-J a_bot_wrist_1_joint -0.85
		-J a_bot_wrist_2_joint -1.5708
		-J a_bot_wrist_3_joint 0.0
		-J b_bot_shoulder_pan_joint 1.5708
		-J b_bot_shoulder_lift_joint -2.1
		-J b_bot_elbow_joint 1.4
		-J b_bot_wrist_1_joint -0.85
		-J b_bot_wrist_2_joint -1.5708
		-J b_bot_wrist_3_joint 0.0
		-unpause"
	  respawn="false"
	  output="screen"/>

    <!-- Spawn controllers -->
    <include file="$(find aist_bringup)/launch/spawn_controllers.launch">
      <arg name="prefixes"		value="$(arg prefixes)"/>
      <arg name="devices"		value="$(arg devices)"/>
      <arg name="controllers"		value="$(arg controllers)"/>
      <arg name="joint_state_frequency"	value="$(arg joint_state_frequency)"/>
      <arg name="sim"			value="$(arg sim)"/>
    </include>
  </group>

  <group unless="$(arg sim)">
    <!-- Spawn hardware drivers -->
    <include file="$(find aist_bringup)/launch/spawn_drivers.launch">
      <arg name="prefixes"	value="$(arg prefixes)"/>
      <arg name="devices"	value="$(arg devices)"/>
      <arg name="drivers"	value="$(arg drivers)"/>
      <arg name="driver_args"	value="$(arg driver_args)"/>
    </include>
  </group>

  <!-- Convert sensor_msgs::JointState to geometry_msgs::TransformStamped
       using the parameter robot_description and publish to TF -->
  <node name="robot_state_publisher"
	pkg ="robot_state_publisher" type="robot_state_publisher" >
    <param name="publish_frequency" value="$(arg robot_state_frequency)"/>
  </node>

  <!-- Launch moveit -->
  <include file="$(find aist_moveit_config)/launch/move_group.launch">
    <arg name="debug"	value="$(arg debug)"/>
  </include>

  <!-- Launch rviz with appropriate launch-prefix and config file. -->
  <arg if="$(eval arg('rviz_config') == '')"
       name="command_args"
       value="-d $(find aist_moveit_config)/launch/moveit.rviz"/>
  <arg unless="$(eval arg('rviz_config') == '')"
       name="command_args" value="-d $(arg rviz_config)"/>

  <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
	args="$(arg command_args)" output="screen">
    <rosparam command="load"
	      file="$(find aist_moveit_config)/config/kinematics.yaml"/>
  </node>

</launch>
