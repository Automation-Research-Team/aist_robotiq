<?xml version="1.0"?>
<launch>

  <arg name="prefixes"		default=""/>
  <arg name="devices"		default=""/>
  <arg name="drivers"		default=""/>
  <arg name="driver_args"	default=""/>
  <arg name="with_torobo"	default="False"/>
  <arg name="manager"		default="torobo_nodelet_manager"/>

  <group if="$(eval drivers.strip() != '')">
    <!-- Spawn the driver at the head of "drivers". -->
    <arg name="driver" value="$(eval drivers.split(',')[0].strip())"/>
    <include file="$(find aist_bringup
		   )/launch/include/$(arg driver)_driver.launch">
      <arg name="prefix"	value="$(eval prefixes.split(',')[0].strip())"/>
      <arg name="device"	value="$(eval devices.split(',')[0].strip())"/>
      <arg name="driver_arg"	value="$(eval driver_args.split(';')[0])"/>
    </include>

    <!-- Recursively spawn the remained drivers. -->
    <arg name ="remained_prefixes"
	 value="$(eval ','.join(prefixes.split(',')[1:]))"/>
    <arg name ="remained_devices"
	 value="$(eval ','.join(devices.split(',')[1:]))"/>
    <arg name ="remained_drivers"
	 value="$(eval ','.join(drivers.split(',')[1:]))"/>
    <arg name ="remained_driver_args"
	 value="$(eval ';'.join(driver_args.split(';')[1:]))"/>
    <arg name ="updated_with_torobo"
	 value="$(eval with_torobo or driver == 'torobo')"/>
    <arg name="kept_manager"	value="$(arg manager)"/>
    <include file="$(find aist_bringup)/launch/include/spawn_drivers.launch">
      <arg name="prefixes"	value="$(arg remained_prefixes)"/>
      <arg name="devices"	value="$(arg remained_devices)"/>
      <arg name="drivers"	value="$(arg remained_drivers)"/>
      <arg name="driver_args"	value="$(arg remained_driver_args)"/>
      <arg name="with_torobo"	value="$(arg updated_with_torobo)"/>
      <arg name="manager"	value="$(arg kept_manager)"/>
    </include>
  </group>

  <!-- If argument "drivers" has names containing "torobo"
       at the first call of this launch file, spawn torobo_drivers. -->
  <group if="$(eval drivers.strip() == '' and with_torobo)">
    <node name="torobo_driver_nodelet" ns="torobo" pkg="nodelet" type="nodelet"
          args="load torobo_driver/torobo_driver_nodelet $(arg manager)"
          output="screen">
      <rosparam file="$(find aist_bringup)/config/torobo_driver_nodelet.yaml"/>
    </node>
  </group>

</launch>
