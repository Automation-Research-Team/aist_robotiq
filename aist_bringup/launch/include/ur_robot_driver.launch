<?xml version="1.0"?>
<launch>

  <arg name="prefix"	 default="ur_"/>
  <arg name="device"	 default="ur5"/>
  <arg name="driver_arg" default="10.66.171.51, 50001, 50002"/>

  <arg name="ip"		 value="$(eval driver_arg.split(',')[0])"/>
  <arg name="reverse_port"	 value="$(eval driver_arg.split(',')[1])"/>
  <arg name="script_sender_port" value="$(eval driver_arg.split(',')[2])"/>
  <arg name="use_tool_communication"
       doc="On e-Series robots tool communication can be enabled with this argument"/>
  <arg name="controllers"       default="joint_state_controller
					 scaled_pos_traj_controller
					 speed_scaling_state_controller
					 force_torque_sensor_controller"
       doc="Controllers that are activated by default."/>
  <arg name="stopped_controllers" default="pos_traj_controller"
       doc="Controllers that are initally loaded, but not started."/>

  <group ns="$(arg prefix)controller">
    <!-- Load hardware interface -->
    <node name="ur_hardware_interface"
	  pkg="ur_robot_driver" type="ur_robot_driver_node"
	  output="screen" required="true">
      <rosparam file="$(find ur_description
		      )/config/$(arg device)_default.yaml"/>
      <rosparam file="$(find aist_bringup)/config/ur_robot_driver.yaml"
		subst_value="true"/>
    </node>

    <!-- Starts socat to bridge the robot's tool communication
	 interface to a local tty device -->
    <node if="$(arg use_tool_communication)"
	  name="ur_tool_communication_bridge"
	  pkg="ur_robot_driver" type="tool_communication"
	  respawn="false" output="screen">
      <rosparam file="(find aist_bringup)/config/ur_tool_communication.yaml"
		subst_value="true"/>
    </node>

    <!-- Load controller settings -->
    <arg name="frequency" value="$(eval 500 if device[-1] == 'e' else 125)"/>
    <rosparam file="$(find ur_robot_driver
		    )/config/ur_robot_controllers.yaml"
	      subst_value="true"/>

    <!-- spawn controller manager -->
    <node name="ros_control_controller_spawner"
	  pkg="controller_manager" type="spawner" respawn="false"
	  output="screen" args="$(arg controllers)"/>

    <!-- load other controller -->
    <node name="ros_control_stopped_spawner"
	  pkg="controller_manager" type="spawner" respawn="false"
	  output="screen" args="--stopped $(arg stopped_controllers)"/>

    <node name="controller_stopper"
	  pkg="controller_stopper" type="node" respawn="false" output="screen">
      <remap from="robot_running"
	     to="ur_hardware_interface/robot_program_running"/>
      <rosparam param="consistent_controllers">
	- "joint_state_controller"
	- "speed_scaling_state_controller"
	- "force_torque_sensor_controller"
      </rosparam>
    </node>

    <!-- Make sure to start this in the namespace of the hardware interface -->
    <node ns="ur_hardware_interface" name="ur_robot_state_helper"
	  pkg="ur_robot_driver" type="robot_state_helper"
	  respawn="false" output="screen"/>
  </group>

</launch>
