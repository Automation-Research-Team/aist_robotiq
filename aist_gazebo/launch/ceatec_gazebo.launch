<?xml version="1.0"?>
<launch>

  <arg name="robot"	default="fetch"/>
  <arg name="scene"	default="ceatec_base_scene"/>
  <arg name="debug"	default="false"/>
  <arg name="gui"	default="true"/>
  <arg name="paused"	default="false"/>
  <arg name="headless"	default="false"/>
  <arg name="x"		default="0.0" />
  <arg name="y"		default="0.0" />
  <arg name="z"		default="0.0" />
  <arg name="yaw"	default="0.0" />

  <!-- Start Gazebo with a blank world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug"		value="$(arg debug)" />
    <arg name="gui"		value="$(arg gui)" />
    <arg name="paused"		value="$(arg paused)"/>
    <arg name="use_sim_time"	value="true"/>
    <arg name="headless"	value="$(arg headless)"/>
  </include>

  <!-- Setup controllers -->
  <rosparam file="$(find fetch_gazebo)/config/default_controllers.yaml"
	    command="load"/>

  <!-- Load robot urdf to param "robot_description". -->
  <param name="robot_description"
	 command="$(find xacro)/xacro '$(find
		  aist_scene_description)/urdf/$(arg scene).urdf.xacro'"/>

  <!-- Start robot_state_publisher -->
  <node name="robot_state_publisher"
	pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="publish_frequency" value="100.0"/>
  </node>

  <!-- Give this robot a serial number and version -->
  <param name="robot/serial"	value="ABCDEFGHIJKLMNOPQRSTUVWX"/>
  <param name="robot/version"	value="0.0.1"/>

  <!-- Put a robot in gazebo, make it look pretty -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
  	respawn="false" output="screen"
        args="-urdf -param robot_description -model fetch
  	      -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg yaw)"/>
  <!-- <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" -->
  <!-- 	respawn="false" output="screen" -->
  <!--       args="-urdf -file '$(find aist_scene_description)/urdf/$(arg scene).urdf.xacro' -->
  <!-- 	      -model fetch -->
  <!-- 	      -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg yaw)"/> -->
  <!-- <node name="prepare_robot" -->
  <!-- 	pkg="fetch_gazebo" type="prepare_simulated_robot.py"/> -->

  <!-- Head Camera Pipeline -->
  <include file="$(find fetch_gazebo)/launch/include/head_camera.launch.xml" />

  <!-- Publish base_scan_raw if anything subscribes to it -->
  <node name="publish_base_scan_raw"
  	pkg="topic_tools" type="relay" args="base_scan base_scan_raw" >
    <param name="lazy" type="bool" value="True"/>
  </node>

  <!-- Start a mux between application and teleop -->
  <node pkg="topic_tools" type="mux" name="cmd_vel_mux"
  	respawn="true" args="base_controller/command /cmd_vel /teleop/cmd_vel">
    <remap from="mux" to="cmd_vel_mux" />
  </node>

  <include file="$(find fetch_navigation)/launch/fetch_nav.launch">
    <arg name="map_file"  value="$(find cps_cvs_maps)/maps/cps_cvs.yaml"/>
  </include>

</launch>
