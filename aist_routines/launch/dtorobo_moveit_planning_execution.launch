<launch>
  <arg name="scene"/>
  <arg name="sim"		default="false"/>
  <arg name="rviz_config"	default=""/>
  <arg name="debug"		default="false"/>
  <arg name="rqt"		default="true"/>

  <group ns="torobo">
    <!-- Given the published joint states, publish tf for the robot links -->
    <node name="robot_state_publisher"
	  pkg="robot_state_publisher" type="robot_state_publisher"
	  respawn="true" output="screen">
      <remap from="joint_states" to="joint_state_server/joint_states"/>
    </node>

    <rosparam file="$(find dtorobo_moveit_config
		    )/config/controller_config.yaml"/>
  </group>

  <!-- launch torobo control -->
  <include file="$(find torobo_control)/launch/torobo_control_nodelet.launch">
    <arg name="sim"	value="$(arg sim)"/>
    <arg name="manager"	value="torobo_nodelet_manager"/>
  </include>

  <!-- launch torobo collision detector -->
  <include file="$(find torobo_collision_detector
		 )/launch/torobo_collision_detector_nodelet.launch">
    <arg name="debug"	value="falsee"/>
    <arg name="manager"	value="torobo_nodelet_manager"/>
  </include>
  <!-- <include file="$(find torobo_collision_detector -->
  <!-- 		 )/launch/current_state_self_collision_checker_nodelet.launch"> -->
  <!--   <arg name="sim"	value="$(arg sim)"/> -->
  <!--   <arg name="manager"	value="torobo_nodelet_manager"/> -->
  <!--   <arg name="rate"	value="100"/> -->
  <!-- </include> -->

  <group ns="torobo">
    <!-- load controller_config -->
    <include file="$(find aist_routines
		   )/launch/moveit_planning_execution.launch">
      <arg name="moveit_config"	value="$(find dtorobo_moveit_config)"/>
      <arg name="rviz_config"	value="$(arg rviz_config)"/>
      <arg name="debug"		value="$(arg debug)"/>
    </include>
  </group>

</launch>
