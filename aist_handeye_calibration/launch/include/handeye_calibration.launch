<?xml version="1.0" ?>
<launch>

  <arg name="config"			default="aist"/>
  <arg name="scene"			default="calibration"/>
  <arg name="sim"			default="false"/>
  <arg name="camera_name"		default="a_phoxi_m_camera"/>
  <arg name="check"			default="false"/>
  <arg name="use_dual_quaternion"	default="false"/>

  <arg name="camera_info_topic"		default="camera_info"/>
  <arg name="image_topic"		default="texture"/>
  <arg name="depth_topic"		default="depth_map"/>

  <!-- Start controllers for robots, cameras and other sensors -->
  <include file="$(find aist_bringup)/launch/$(arg config)_bringup.launch">
    <arg name="scene"		value="$(arg scene)"/>
    <arg name="sim"		value="$(arg sim)"/>
    <arg name="rviz_config"	value="$(find aist_handeye_calibration
				       )/launch/handeye_calibration.rviz"/>
  </include>

  <!-- Set file names for configuration and calibrated parameters -->
  <arg name="config_file"
       value="$(find aist_handeye_calibration
	      )/config/$(arg config)/$(arg camera_name).yaml"/>
  <arg name="calib_file"
       value="$(env HOME)/.ros/aist_handeye_calibration/$(arg camera_name
	      )_calibrated.yaml"/>

  <!-- Start ArUco -->
  <node ns="$(arg camera_name)" name="aruco_detector"
	pkg="aist_aruco_ros" type="aist_aruco_detector" output="screen">
    <remap from="/camera_info"	to="$(arg camera_info_topic)"/>
    <remap from="/image"	to="$(arg image_topic)"/>
    <remap from="/depth"	to="$(arg depth_topic)"/>
    <rosparam file="$(arg config_file)"/>
  </node>

  <!-- Publish dummy or calibrated camera pose -->
  <node name="$(anon handeye_publisher)"
	pkg="aist_handeye_calibration" type="publish.py" output="screen">
    <param name="dummy" value="$(eval not check)"/>
    <rosparam file="$(arg config_file)"/>
    <rosparam file="$(arg calib_file)" if="$(arg check)"/>
  </node>

  <!-- Start easy_handeye calibrator -->
  <node unless="$(arg check)"
	name="handeye_calibrator"
	pkg="aist_handeye_calibration" type="calibrator" output="screen">
    <rosparam file="$(arg config_file)"/>
    <param name="use_dual_quaternion"	 value="$(arg use_dual_quaternion)"/>
  </node>

</launch>
