<?xml version="1.0" ?>
<launch>

  <arg name="config"/>
  <arg name="scene"/>

  <arg name="sim"/>
  <arg name="camera_name"/>
  <arg name="check"/>
  <arg name="use_dual_quaternion"/>

  <arg name="camera_info_topic"/>
  <arg name="image_topic"/>
  <arg name="depth_topic"/>

  <!-- Start controllers for robots, cameras and other sensors -->
  <include file="$(find aist_bringup)/launch/$(arg config)_bringup.launch">
    <arg name="scene"	value="$(arg scene)"/>
    <arg name="sim"	value="$(arg sim)"/>
    <arg name="rviz_config"
	 value="$(find aist_handeye_calibration
		)/launch/include/handeye_calibration.rviz"/>
  </include>

  <!-- Set file names for configuration and calibrated parameters -->
  <arg name="config_file"
       value="$(find aist_handeye_calibration
	      )/config/$(arg config)/$(arg camera_name).yaml"/>
  <arg name="calib_file"
       value="$(env HOME
	      )/.ros/aist_handeye_calibration/$(arg camera_name).yaml"/>

  <!-- Start ArUco -->
  <node name="aruco_detector"
	pkg="aist_aruco_ros" type="aist_aruco_detector" output="screen">
    <remap from="/camera_info"	to="$(arg camera_name)/$(arg camera_info_topic)"/>
    <remap from="/image"	to="$(arg camera_name)/$(arg image_topic)"/>
    <remap from="/depth"	to="$(arg camera_name)/$(arg depth_topic)"/>
    <rosparam file="$(arg config_file)"/>
  </node>

  <!-- Publish dummy or calibrated camera pose -->
  <node name="$(anon handeye_publisher)"
	pkg="aist_handeye_calibration" type="publish_calibration.py"
	output="screen">
    <param name="dummy" value="$(eval not check)"/>
    <rosparam file="$(arg calib_file)" if="$(arg check)"/>
    <rosparam file="$(arg config_file)"/>
  </node>

  <!-- Start calibrator -->
  <node unless="$(arg check)"
	name="handeye_calibrator"
	pkg="aist_handeye_calibration" type="calibrator" output="screen">
    <param name="use_dual_quaternion"	 value="$(arg use_dual_quaternion)"/>
    <param name="calib_file"		 value="$(arg calib_file)"/>
    <rosparam file="$(arg config_file)"/>
  </node>

</launch>
